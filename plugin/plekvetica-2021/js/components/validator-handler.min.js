var plekvalidator={fields:{},errors:{},error_messages:{},construct(){this.error_messages=this.default_error_messages()},add_field(input_id,validator_type,allow_empty=!1){this.fields[input_id]={id:input_id,type:validator_type,allow_empty:allow_empty}},add_error_messages(input_id,empty=null,invalid_type=null,not_a_number=null,to_long=null,to_short=null){let vali=plekvalidator.error_messages;this.fields[input_id].error_messages={empty:null===empty?vali.empty:empty,invalid_type:null===invalid_type?vali.invalid_type:invalid_type,nan:null===not_a_number?vali.not_a_number:not_a_number,to_long:null===to_long?vali.to_long:to_long,to_short:null===to_short?vali.to_short:to_short}},default_error_messages:()=>({empty:__("Field cannot be empty","pleklang"),invalid_type:__("Input is not the correct type","pleklang"),nan:__("Input is not a Number","pleklang"),to_long:__("Input is to long","pleklang"),to_short:__("Input is to short","pleklang")}),add_error(input_id,message){try{this.errors[input_id].push(message)}catch(error){this.errors[input_id]=[message]}},display_errors(){if(0===Object.keys(this.errors).length)return null;jQuery.each(this.errors,(function(key,val){"object"==typeof val&&jQuery.each(val,(function(index,msg){plekerror.display_error(key,msg)}))}))},validate_data(){return 0===this.fields.length?(plekerror.display_error("Validator",__("No fields set","pleklang")),!1):(plekerror.display_error("Validator","Nicht validiert!"),!0)},validate_form_data(data){if(this.errors={},plekerror.clear_field_errors(),0===this.fields.length)return plekerror.display_error("Validator",__("No fields set","pleklang")),!1;for(var dataset of data.entries())if(void 0!==this.fields[dataset[0]]){var type=this.fields[dataset[0]].type;this.validate_field(dataset[0],type,dataset[1])}return!(Object.keys(this.errors).length>0)||(plekerror.display_error("Validator",__("Cannot save because of errors. Please check the fields again.","pleklang")),this.errors)},validate_field(field_id,type,value){if(void 0===value&&(value=""),"number"!=typeof value)try{var nv=JSON.parse(value);if("object"==typeof nv)return void jQuery.each(nv,(function(key,val){plekvalidator.validate_field(field_id,type,val)}))}catch(error){}console.log("Validator for: "+field_id),console.log(type),console.log(value);let error_msg=void 0!==this.fields[field_id].error_messages?this.fields[field_id].error_messages:this.default_error_messages();if(0===value.length)return!0===plekvalidator.fields[field_id].allow_empty||(plekvalidator.add_error(field_id,error_msg.empty),!1);switch(type){case"int":if("number"!=typeof value)return plekvalidator.add_error(field_id,error_msg.invalid_type),!1}}};plekvalidator.construct();